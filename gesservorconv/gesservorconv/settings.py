"""
Django settings for gesservorconv project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import environ

env = environ.Env(
    DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG')

ALLOWED_HOSTS = ['127.0.0.1', '0.0.0.0', '[::1]',  '[::]', '.localhost']


# Application definition

INSTALLED_APPS = [
    'dafne',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.postgres',
    'django_celery_results',
    'django_celery_beat',
    'django_hosts',
    'django_ratelimit',
    'fontawesomefree',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django_htmx',
    'solicitudes.apps.SolicitudesConfig',
    'firmas.apps.FirmasConfig',
    'servicios.apps.ServiciosConfig',
    'cuentas.apps.CuentasConfig',
    'auditoria.apps.AuditoriaConfig',
    'administrador.apps.AdministradorConfig',
    'favicon.apps.FaviconConfig',

    'channels'
]

MIDDLEWARE = [
    'django_hosts.middleware.HostsRequestMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'gesservorconv.middleware.MiddlewareVistaCsrf',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django_htmx.middleware.HtmxMiddleware',

    'django_hosts.middleware.HostsResponseMiddleware'
]

DEFAULT_HOST = 'gesservorconv'

ROOT_HOSTCONF = 'gesservorconv.hosts'

ROOT_URLCONF = 'gesservorconv.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'gesservorconv/templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'gesservorconv.asgi.application'

WSGI_APPLICATION = 'gesservorconv.wsgi.application'

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

SESSION_COOKIE_AGE = 1800

SESSION_COOKIE_SECURE = False  # Cambiar en producción

SESSION_SAVE_EVERY_REQUEST = True

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

EMAIL_BACKEND = 'gesservorconv.mail_backends.MotorEmailDesarrollo'

EMAIL_FILE_PATH = os.path.join(BASE_DIR, 'gesservorconv/tmp/emails')

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

CSRF_FAILURE_VIEW = 'gesservorconv.csrf.failure'

CSRF_USE_SESSIONS = True

RATELIMIT_VIEW = 'gesservorconv.ratelimit.view'

PASSWORD_RESET_TOKEN_GENERATOR_KEY_SALT = os.environ.get(
    'PASSWORD_RESET_TOKEN_GENERATOR_KEY_SALT'
)

ACCOUNT_ACTIVATION_TOKEN_GENERATOR_KEY_SALT = os.environ.get(
    'ACCOUNT_ACTIVATION_TOKEN_GENERATOR_KEY_SALT'
)

USER_AUTHENTICATION_TOKEN_GENERATOR_KEY_SALT = os.environ.get(
    'USER_AUTHENTICATION_TOKEN_GENERATOR_KEY_SALT'
)


MEDIA_URL = 'archivos/'

MEDIA_ROOT = BASE_DIR/'gesservorconv/media'


CELERY_TIMEZONE = 'America/Argentina/Buenos_Aires'

CELERY_TASK_TRACK_STARTED = True

CELERY_TASK_TIME_LIMIT = 3600

CELERY_BROKER_URL = os.environ.get('CELERY_BROKER')

CELERY_RESULT_BACKEND = 'django_celery_results.backends.DatabaseBackend'

CELERY_CACHE_BACKEND = os.environ.get('CELERY_BACKEND')

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

CELERY_BROKER_CONNECTION_RETRY = True

CELERY_WORKER_LOG_COLOR = True

CELERY_LOG_LEVEL = 'INFO'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            '()': 'django.utils.log.ServerFormatter',
            'format': '{levelname} {server_time}'
                      ' {module} {process:d} {thread:d}'
                      ' {message}',
            'style': '{',
            'datefmt': '%d/%m/%Y %H:%M:%S'
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'no_es_error': {
            '()': 'gesservorconv.logging.Filtro',
        },
    },
    'handlers': {
        'stdout': {
            'level': 'INFO',
            'filters': ['require_debug_true', 'no_es_error'],
            'class': 'logging.StreamHandler',
            'stream': 'ext://sys.stdout',
            'formatter': 'simple',
        },
        'stderr': {
            'level': 'ERROR',
            'class': 'logging.StreamHandler',
            'stream': 'ext://sys.stderr',
            'formatter': 'simple',
        },
        'chango': {
            'level': 'INFO',
            'class': 'gesservorconv.logging.ManejadorArchivosTiempoRotativo',
            'filename': os.path.join(
                BASE_DIR,
                'gesservorconv/log/django.log'
            ),
            'when': 'MIDNIGHT',
            'backupCount': 0,
            'formatter': 'verbose',
        },
        'dafne': {
            'level': 'INFO',
            'class': 'gesservorconv.logging.ManejadorArchivosTiempoRotativo',
            'filename': os.path.join(
                BASE_DIR,
                'gesservorconv/log/daphne.log'
            ),
            'when': 'MIDNIGHT',
            'backupCount': 0,
            'formatter': 'simple',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['chango', 'stdout', 'stderr'],
            'propagate': True,
        },
        'daphne': {
            'handlers': ['dafne', 'stdout', 'stderr'],
            'propagate': False,
        },
        'matplotlib.font_manager': {
            'handlers': ['stderr']
        }
    }
}


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DBNAME'),
        'USER': os.environ.get('DBUSER'),
        'PASSWORD': os.environ.get('DBPASSWORD'),
        'HOST': os.environ.get('DBHOST'),
        'PORT': os.environ.get('DBPORT'),
    }
}

CACHE_MIDDLEWARE_SECONDS = 0

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        # REDIS: redis://(usuario):contrasenia@huesped:puerto/idBaseDatos
        # La contraseña proviene de requirepass si no hay usuario
        'LOCATION': os.environ.get('REDIS_SESSION')
    },
    'ratelimit': {
        'BACKEND': 'django_redis.cache.RedisCache',
        # REDIS: redis://(usuario):contrasenia@huesped:puerto/idBaseDatos
        # La contraseña proviene de requirepass si no hay usuario
        'LOCATION': os.environ.get('REDIS_RATELIMIT'),
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.default.DefaultClient'
        }
    }
}

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            # REDIS: redis://(usuario):contrasenia@huesped:puerto/idBaseDatos
            # La contraseña proviene de requirepass si no hay usuario
            'hosts': [
                os.environ.get('REDIS_CHANNEL')
            ],
        },
    },
}


RATELIMIT_ENABLE = False  # Cambiar en producción

RATELIMIT_USE_CACHE = 'ratelimit'


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation'
        '.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
        '.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation'
        '.CommonPasswordValidator',
    },
    {
        'NAME': 'gesservorconv.auth.ValidadorContrasenia',
    },
]

PASSWORD_RESET_TIMEOUT = 1800

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.ScryptPasswordHasher',
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es-ar'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_TZ = True

DECIMAL_SEPARATOR = ','

USE_THOUSAND_SEPARATOR = True

THOUSAND_SEPARATOR = '.'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STORAGES = {
    'default': {
        'BACKEND': 'django.core.files.storage.FileSystemStorage',
    },
    'staticfiles': {
        'BACKEND': 'whitenoise.storage.CompressedStaticFilesStorage',
    },
}

STATIC_URL = 'estatico/'

STATICFILES_DIRS = [BASE_DIR / 'gesservorconv/static']

STATIC_ROOT = BASE_DIR/'gesservorconv/staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
